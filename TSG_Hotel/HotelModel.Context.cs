//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSG_Hotel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelDBEntities : DbContext
    {
        public HotelDBEntities()
            : base("name=HotelDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Camere> Cameres { get; set; }
        public virtual DbSet<Dotari> Dotaris { get; set; }
        public virtual DbSet<ManagerRezervari> ManagerRezervaris { get; set; }
        public virtual DbSet<Servicii> Serviciis { get; set; }
        public virtual DbSet<Useri> Useris { get; set; }
    
        public virtual ObjectResult<spCRUDCamere_Result> spCRUDCamere(Nullable<int> iD, Nullable<int> capacitate, Nullable<int> pret, string option)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var capacitateParameter = capacitate.HasValue ?
                new ObjectParameter("Capacitate", capacitate) :
                new ObjectParameter("Capacitate", typeof(int));
    
            var pretParameter = pret.HasValue ?
                new ObjectParameter("Pret", pret) :
                new ObjectParameter("Pret", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCRUDCamere_Result>("spCRUDCamere", iDParameter, capacitateParameter, pretParameter, optionParameter);
        }
    
        public virtual ObjectResult<spCRUDDotari_Result> spCRUDDotari(Nullable<int> iD, string nume, Nullable<int> pret, string option)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var pretParameter = pret.HasValue ?
                new ObjectParameter("Pret", pret) :
                new ObjectParameter("Pret", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCRUDDotari_Result>("spCRUDDotari", iDParameter, numeParameter, pretParameter, optionParameter);
        }
    
        public virtual ObjectResult<spCRUDServicii_Result> spCRUDServicii(Nullable<int> iD, string nume, Nullable<int> pret, string option)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var pretParameter = pret.HasValue ?
                new ObjectParameter("Pret", pret) :
                new ObjectParameter("Pret", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCRUDServicii_Result>("spCRUDServicii", iDParameter, numeParameter, pretParameter, optionParameter);
        }
    
        public virtual ObjectResult<spManagerDotari_Result> spManagerDotari(Nullable<int> iD_CAM, Nullable<int> iD_DOT, string option)
        {
            var iD_CAMParameter = iD_CAM.HasValue ?
                new ObjectParameter("ID_CAM", iD_CAM) :
                new ObjectParameter("ID_CAM", typeof(int));
    
            var iD_DOTParameter = iD_DOT.HasValue ?
                new ObjectParameter("ID_DOT", iD_DOT) :
                new ObjectParameter("ID_DOT", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spManagerDotari_Result>("spManagerDotari", iD_CAMParameter, iD_DOTParameter, optionParameter);
        }
    
        public virtual ObjectResult<spManagerRezervari_Result> spManagerRezervari(Nullable<int> iD_USR, Nullable<int> iD_CAM, Nullable<System.DateTime> check_in, Nullable<System.DateTime> check_out, string option)
        {
            var iD_USRParameter = iD_USR.HasValue ?
                new ObjectParameter("ID_USR", iD_USR) :
                new ObjectParameter("ID_USR", typeof(int));
    
            var iD_CAMParameter = iD_CAM.HasValue ?
                new ObjectParameter("ID_CAM", iD_CAM) :
                new ObjectParameter("ID_CAM", typeof(int));
    
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("Check_in", check_in) :
                new ObjectParameter("Check_in", typeof(System.DateTime));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("Check_out", check_out) :
                new ObjectParameter("Check_out", typeof(System.DateTime));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spManagerRezervari_Result>("spManagerRezervari", iD_USRParameter, iD_CAMParameter, check_inParameter, check_outParameter, optionParameter);
        }
    
        public virtual ObjectResult<spManagerServicii_Result> spManagerServicii(Nullable<int> iD_USR, Nullable<int> iD_SER, string option)
        {
            var iD_USRParameter = iD_USR.HasValue ?
                new ObjectParameter("ID_USR", iD_USR) :
                new ObjectParameter("ID_USR", typeof(int));
    
            var iD_SERParameter = iD_SER.HasValue ?
                new ObjectParameter("ID_SER", iD_SER) :
                new ObjectParameter("ID_SER", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spManagerServicii_Result>("spManagerServicii", iD_USRParameter, iD_SERParameter, optionParameter);
        }
    
        public virtual ObjectResult<spValabilitate_Result> spValabilitate(Nullable<System.DateTime> check_in, Nullable<System.DateTime> check_out)
        {
            var check_inParameter = check_in.HasValue ?
                new ObjectParameter("Check_in", check_in) :
                new ObjectParameter("Check_in", typeof(System.DateTime));
    
            var check_outParameter = check_out.HasValue ?
                new ObjectParameter("Check_out", check_out) :
                new ObjectParameter("Check_out", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValabilitate_Result>("spValabilitate", check_inParameter, check_outParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spDotariInfo(Nullable<int> iD_CAM)
        {
            var iD_CAMParameter = iD_CAM.HasValue ?
                new ObjectParameter("ID_CAM", iD_CAM) :
                new ObjectParameter("ID_CAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spDotariInfo", iD_CAMParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spServiciiInfo(Nullable<int> iD_USR)
        {
            var iD_USRParameter = iD_USR.HasValue ?
                new ObjectParameter("ID_USR", iD_USR) :
                new ObjectParameter("ID_USR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spServiciiInfo", iD_USRParameter);
        }
    }
}
